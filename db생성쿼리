CREATE TABLE BOARD(
NOTICE_BASIC NUMBER,
AOS_110 VARCHAR2(1000),
TITLE VARCHAR2(1000),
CONTENT VARCHAR2(4000),
WRITER varchar2(1000),
COUNT NUMBER,
BOARD_DATE DATE,
KINDS VARCHAR2(1000),
CONSTRAINT PK_NOTICE_BASIC PRIMARY KEY(NOTICE_BASIC)
);

CREATE TABLE BOARD_COMMENT(
COMMENT_BASIC NUMBER,
NOTICE_BASIC NUMBER,
WRITER VARCHAR2(1000),
CONTENT VARCHAR2(4000),
COMMENT_DATE DATE,
CONSTRAINT PK_COMMENT_BASIC PRIMARY KEY(COMMENT_BASIC),
CONSTRAINT fk_ex2_id FOREIGN KEY (NOTICE_BASIC) REFERENCES BOARD(NOTICE_BASIC)
);

COMMENT ON TABLE BOARD IS '게시판 테이블입니다';
COMMENT ON COLUMN BOARD.NOTICE_BASIC IS '게시판 기본키';
COMMENT ON COLUMN BOARD.AOS_110 IS '회사키';
COMMENT ON COLUMN BOARD.TITLE IS '게시글 제목';
COMMENT ON COLUMN BOARD.CONTENT IS '글내용';
COMMENT ON COLUMN BOARD.WRITER IS '작성자';
COMMENT ON COLUMN BOARD.COUNT IS '조회수';
COMMENT ON COLUMN BOARD.BOARD_DATE IS '작성일';
COMMENT ON COLUMN BOARD.KINDS IS '게시판 종류';

COMMENT ON TABLE BOARD_COMMENT IS '댓글 테이블입니다';
COMMENT ON COLUMN BOARD_COMMENT.COMMENT_BASIC IS '댓글 기본키';
COMMENT ON COLUMN BOARD_COMMENT.NOTICE_BASIC IS '외래키';
COMMENT ON COLUMN BOARD_COMMENT.WRITER IS '작성자';
COMMENT ON COLUMN BOARD_COMMENT.CONTENT IS '내용';
COMMENT ON COLUMN BOARD_COMMENT.COMMENT_DATE IS '작성일';

CREATE TABLE COMPANY(
 C_NO NUMBER PRIMARY KEY,
 C_NAME VARCHAR2(300 BYTE),
 C_ID VARCHAR2(300 BYTE),
 C_OWNER VARCHAR2(300 BYTE),
 C_PW VARCHAR2(300 BYTE),
 C_ADRESS VARCHAR2(300 BYTE),
 C_LOGO VARCHAR2(300 BYTE),
 C_SIGN VARCHAR2(300 BYTE),
 C_QRCODE VARCHAR2(300 BYTE),
 C_MILEAGE VARCHAR2(300 BYTE),
 C_CLOSEDAY DATE,
 C_LEVEL NUMBER
);

CREATE TABLE PAYMENT(
PAYMENT_KEY NUMBER,
C_NO NUMBER,
MILEAGE VARCHAR2(300),
PAY_DATE DATE,
CONSTRAINT PK_PAYMENT_KEY PRIMARY KEY(PAYMENT_KEY),
CONSTRAINT FK_C_NO FOREIGN KEY (C_NO) REFERENCES COMPANY(C_NO)
);

COMMENT ON TABLE PAYMENT IS '결제테이블 입니다.';
COMMENT ON COLUMN PAYMENT.PAYMENT_KEY IS '결제 기본키';
COMMENT ON COLUMN PAYMENT.C_NO IS '회사키';
COMMENT ON COLUMN PAYMENT.MILEAGE IS '마일리지';
COMMENT ON COLUMN PAYMENT.PAY_DATE IS '결제일';

CREATE TABLE PRICE(
P_LEVEL NUMBER,
EMPLOYEES NUMBER,
PRICE VARCHAR2(100)
);

COMMENT ON TABLE PRICE IS '금액테이블 입니다.';
COMMENT ON COLUMN PRICE.P_LEVEL IS '레벨';
COMMENT ON COLUMN PRICE.EMPLOYEES IS '사원 수';
COMMENT ON COLUMN PRICE.PRICE IS '가격';

CREATE TABLE CALANDER(
C_NO NUMBER PRIMARY KEY,
C_NAME VARCHAR2 NOT NULL,
C_STARTDATE DATE NOT NULL,
C_ENDDATE DATE NOT NULL,
C_TYPE VARCHAR2 NOT NULL
);
COMMENT ON TABLE CALANDER IS '일정테이블 입니다.';
COMMENT ON COLUMN CALANDER.C_NO IS '일정번호';
COMMENT ON COLUMN CALANDER.C_NAME IS '일정이름';
COMMENT ON COLUMN CALANDER.C_STARTDATE IS '일정시작시간';
COMMENT ON COLUMN CALANDER.C_ENDDATE IS '일정종료시간';
COMMENT ON COLUMN CALANDER.C_TYPE IS '일정종류';


CREATE TABLE COMMUTE(
CO_NO NUMBER PRIMARY KEY,
C_NO NUMBER NOT NULL,
M_NO NUMBER NOT NULL,
C_DATE DATE NOT NULL,
C_INTIME DATE NOT NULL,
C_OUTTIME DATE NOT NULL
);

COMMENT ON TABLE COMMUTE IS '근태관리테이블 입니다.';
COMMENT ON COLUMN COMMUTE.CO_NO IS '근태넘버';
COMMENT ON COLUMN COMMUTE.C_NO IS '회사키(외래키)';
COMMENT ON COLUMN COMMUTE.M_NO IS '사원키(외래키)';
COMMENT ON COLUMN COMMUTE.C_DATE IS '출근날짜';
COMMENT ON COLUMN COMMUTE.C_INTIME IS '출근시간';
COMMENT ON COLUMN COMMUTE.C_OUTTIME IS '퇴근시간';

CREATE TABLE VACATION(
V_NO NUMBER PRIMARY KEY,
M_NO NUMBER NOT NULL,
V_USEDDATE NUMBER NOT NULL,
V_STARTDATE DATE,
V_RECALLDATE DATE
);

COMMENT ON TABLE VACATION IS '휴가테이블 입니다.';
COMMENT ON COLUMN VACATION.V_NO IS '휴가키';
COMMENT ON COLUMN VACATION.M_NO IS '사원키(외래키)';
COMMENT ON COLUMN VACATION.V_USEDDATE IS '사용일수';
COMMENT ON COLUMN VACATION.V_STARTDATE IS '시작일';
COMMENT ON COLUMN VACATION.V_RECALLDATE IS '종료일';

CREATE TABLE GIVEVACATION(
C_NO NUMBER NOT NULL,
C_YEAR NUMBER NOT NULL, 
V_VACADATE NUMBER NOT NULL,
V_DATE DATE NOT NULL 
);

COMMENT ON TABLE GIVEVACATION IS '휴가지급테이블 입니다.';
COMMENT ON COLUMN GIVEVACATION.C_NO IS '회사키';
COMMENT ON COLUMN GIVEVACATION.C_YEAR IS '근속년수';
COMMENT ON COLUMN GIVEVACATION.V_VACADATE IS '지급일수';
COMMENT ON COLUMN GIVEVACATION.V_DATE IS '휴가지급날짜';


CREATE TABLE DIVISION(
 DIV_NO NUMBER PRIMARY KEY,
 C_FK_NO NUMBER,
 DIV_TYPE NUMBER,
 DIV_INFO VARCHAR2(300 BYTE)
);

CREATE TABLE REPORT(
 REP_NO NUMBER PRIMARY KEY,
 C_FK_NO NUMBER,
 REP_FK_DEPART VARCHAR2(300 BYTE),
 REP_TITLE VARCHAR2(300 BYTE),
 REP_CONTENT VARCHAR2(300 BYTE),
 REP_FK_NAME VARCHAR2(300 BYTE),
 REP_DATE DATE
);


CREATE TABLE EMPLOYEE(
    E_NO NUMBER PRIMARY KEY,
    C_FK_NO NUMBER,
    E_ID VARCHAR2(300),
    E_PW VARCHAR2(300),
    E_NAME VARCHAR2(30),
    E_FK_JOBCODE  NUMBER,
    E_FK_DEPART NUMBER,
    E_ADDRESS VARCHAR2(300),
    E_EXTEN NUMBER,
    E_PHONE VARCHAR2(13),
    E_EMAIL VARCHAR2(100),
    E_HIRE_DATE DATE,
    E_ENT_DATE DATE,
    E_ENT_YN CHAR(1 BYTE) DEFAULT 'N',
    E_PHOTO VARCHAR2(100)
);

ALTER TABLE EMPLOYEE ADD(FOREIGN KEY (C_FK_NO) REFERENCES COMPANY (C_NO) ON DELETE CASCADE);
ALTER TABLE EMPLOYEE ADD(FOREIGN KEY (E_FK_JOBCODE) REFERENCES DIVISION (DIV_NO));
ALTER TABLE EMPLOYEE ADD(FOREIGN KEY (E_FK_DEPART) REFERENCES DIVISION (DIV_NO));


CREATE TABLE APPROVAL(
APPROVAL_KEY NUMBER PRIMARY KEY,
C_FK NUMBER,
TITLE VARCHAR2(300),
WRITER_FK NUMBER,
WRITE_DATE DATE,
DOCUMENT_TYPE VARCHAR2(100),
CONDITION NUMBER CHECK (CONDITION BETWEEN 0 AND 2)
);

ALTER TABLE APPROVAL ADD (FOREIGN KEY (WRITER_FK) REFERENCES EMPLOYEE (E_NO));
ALTER TABLE APPROVAL ADD (FOREIGN KEY (C_FK) REFERENCES EMPLOYEE (E_NO));


CREATE TABLE APPROVAL_CONDITION(
A_CONDITION_KEY NUMBER PRIMARY KEY,
APPROVAL_FK NUMBER,
APPROVER_FK NUMBER,
CONDITION NUMBER CHECK (CONDITION BETWEEN 0 AND 2),
APPROVAL_DATE DATE
);

ALTER TABLE APPROVAL_CONDITION ADD (FOREIGN KEY (APPROVAL_FK) REFERENCES APPROVAL (APPROVAL_KEY));
ALTER TABLE APPROVAL_CONDITION ADD (FOREIGN KEY (APPROVER_FK) REFERENCES EMPLOYEE (E_NO));

