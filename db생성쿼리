--계정생성쿼리
CREATE USER css IDENTIFIED BY css;
GRANT CONNECT, RESOURCE, CREATE VIEW, CREATE SEQUENCE TO css;

--게시판
CREATE TABLE BOARD(
B_KEY NUMBER PRIMARY KEY,
C_KEY_FK VARCHAR2(1000),
B_TITLE VARCHAR2(1000),
B_CONTENT VARCHAR2(4000),
B_WRITER varchar2(1000),
B_COUNT NUMBER,
B_DATE DATE,
B_CATEGORY VARCHAR2(1000)
);

CREATE TABLE BOARD_COMMENT(
COM_KEY NUMBER PRIMARY KEY,
B_KEY_FK NUMBER,
C_WRITER VARCHAR2(1000),
C_CONTENT VARCHAR2(4000),
C_DATE DATE,
CONSTRAINT FK_B_KEY FOREIGN KEY (B_KEY_FK) REFERENCES BOARD(B_KEY)
);


--회사테이블
CREATE TABLE COMPANY(
 C_KEY NUMBER PRIMARY KEY,
 C_NAME VARCHAR2(300 BYTE),
 C_ID VARCHAR2(300 BYTE),
 C_OWNER VARCHAR2(300 BYTE),
 C_PWD VARCHAR2(300 BYTE),
 C_ADRESS VARCHAR2(300 BYTE),
 C_LOGO VARCHAR2(300 BYTE),
 C_SIGN VARCHAR2(300 BYTE),
 C_QRCODE VARCHAR2(300 BYTE),
 C_MILEAGE VARCHAR2(300 BYTE),
 C_CLOSEDAY DATE,
 C_LEVEL NUMBER
);

--결제테이블
CREATE TABLE PAYMENT(
PAY_KEY NUMBER PRIMARY KEY,
C_KEY_FK NUMBER,
PAY_MILEAGE VARCHAR2(300),
PAY_DATE DATE,
CONSTRAINT FK_C_KEY FOREIGN KEY (C_KEY_FK) REFERENCES COMPANY(C_KEY)
);

COMMENT ON TABLE PAYMENT IS '결제테이블 입니다.';
COMMENT ON COLUMN PAYMENT.PAYMENT_KEY IS '결제 기본키';
COMMENT ON COLUMN PAYMENT.C_NO IS '회사키';
COMMENT ON COLUMN PAYMENT.MILEAGE IS '마일리지';
COMMENT ON COLUMN PAYMENT.PAY_DATE IS '결제일';

--금액테이블
CREATE TABLE PRICE(
P_LEVEL NUMBER,
EMPLOYEES NUMBER,
PRICE VARCHAR2(100)
);
COMMENT ON TABLE PRICE IS '금액테이블 입니다.';
COMMENT ON COLUMN PRICE.P_LEVEL IS '레벨';
COMMENT ON COLUMN PRICE.EMPLOYEES IS '사원 수';
COMMENT ON COLUMN PRICE.PRICE IS '가격';






--일정관리테이블
CREATE TABLE CALANDER(
C_NO NUMBER PRIMARY KEY,
C_NAME VARCHAR2 NOT NULL,
C_STARTDATE DATE NOT NULL,
C_ENDDATE DATE NOT NULL,
C_TYPE VARCHAR2 NOT NULL
);
COMMENT ON TABLE CALANDER IS '일정테이블 입니다.';
COMMENT ON COLUMN CALANDER.C_NO IS '일정번호';
COMMENT ON COLUMN CALANDER.C_NAME IS '일정이름';
COMMENT ON COLUMN CALANDER.C_STARTDATE IS '일정시작시간';
COMMENT ON COLUMN CALANDER.C_ENDDATE IS '일정종료시간';
COMMENT ON COLUMN CALANDER.C_TYPE IS '일정종류';

--근태관리테이블
CREATE TABLE COMMUTE(
CO_NO NUMBER PRIMARY KEY,
C_NO NUMBER NOT NULL,
M_NO NUMBER NOT NULL,
C_DATE DATE NOT NULL,
C_INTIME DATE NOT NULL,
C_OUTTIME DATE NOT NULL
);

COMMENT ON TABLE COMMUTE IS '근태관리테이블 입니다.';
COMMENT ON COLUMN COMMUTE.CO_NO IS '근태넘버';
COMMENT ON COLUMN COMMUTE.C_NO IS '회사키(외래키)';
COMMENT ON COLUMN COMMUTE.M_NO IS '사원키(외래키)';
COMMENT ON COLUMN COMMUTE.C_DATE IS '출근날짜';
COMMENT ON COLUMN COMMUTE.C_INTIME IS '출근시간';
COMMENT ON COLUMN COMMUTE.C_OUTTIME IS '퇴근시간';

--휴가테이블
CREATE TABLE VACATION(
V_NO NUMBER PRIMARY KEY,
M_NO NUMBER NOT NULL,
V_USEDDATE NUMBER NOT NULL,
V_STARTDATE DATE,
V_RECALLDATE DATE
);

COMMENT ON TABLE VACATION IS '휴가테이블 입니다.';
COMMENT ON COLUMN VACATION.V_NO IS '휴가키';
COMMENT ON COLUMN VACATION.M_NO IS '사원키(외래키)';
COMMENT ON COLUMN VACATION.V_USEDDATE IS '사용일수';
COMMENT ON COLUMN VACATION.V_STARTDATE IS '시작일';
COMMENT ON COLUMN VACATION.V_RECALLDATE IS '종료일';

--휴가지급테이블
CREATE TABLE GIVEVACATION(
C_NO NUMBER NOT NULL,
C_YEAR NUMBER NOT NULL, 
V_VACADATE NUMBER NOT NULL,
V_DATE DATE NOT NULL 
);

COMMENT ON TABLE GIVEVACATION IS '휴가지급테이블 입니다.';
COMMENT ON COLUMN GIVEVACATION.C_NO IS '회사키';
COMMENT ON COLUMN GIVEVACATION.C_YEAR IS '근속년수';
COMMENT ON COLUMN GIVEVACATION.V_VACADATE IS '지급일수';
COMMENT ON COLUMN GIVEVACATION.V_DATE IS '휴가지급날짜';

--구분정보테이블
CREATE TABLE DIVISION(
 DIV_NO NUMBER PRIMARY KEY,
 C_NO_FK NUMBER,
 DIV_TYPE NUMBER,
 DIV_INFO VARCHAR2(300 BYTE)
);

--업무보고테이블
CREATE TABLE REPORT(
 REP_NO NUMBER PRIMARY KEY,
 C_NO_FK NUMBER,
 REP_TITLE VARCHAR2(300 BYTE),
 REP_CONTENT VARCHAR2(300 BYTE),
 REP_WRITER_FK VARCHAR2(300 BYTE),
 REP_DATE DATE
);


--사원테이블
CREATE TABLE EMPLOYEE(
    E_PK NUMBER PRIMARY KEY
    E_NO VARCHAR2(100),
    C_FK_NO NUMBER,
    E_ID VARCHAR2(300),
    E_PW VARCHAR2(300),
    E_NAME VARCHAR2(30),
    E_FK_JOBCODE  NUMBER,
    E_FK_DEPART NUMBER,
    E_ADDRESS VARCHAR2(300),
    E_EXTEN NUMBER,
    E_PHONE VARCHAR2(13),
    E_EMAIL VARCHAR2(100),
    E_HIRE_DATE DATE,
    E_ENT_DATE DATE,
    E_ENT_YN CHAR(1 BYTE) DEFAULT 'N',
    E_PHOTO VARCHAR2(100)
);

ALTER TABLE EMPLOYEE ADD(FOREIGN KEY (C_FK_NO) REFERENCES COMPANY (C_NO) ON DELETE CASCADE);
ALTER TABLE EMPLOYEE ADD(FOREIGN KEY (E_FK_JOBCODE) REFERENCES DIVISION (DIV_NO));
ALTER TABLE EMPLOYEE ADD(FOREIGN KEY (E_FK_DEPART) REFERENCES DIVISION (DIV_NO));


--전자결재테이블
CREATE TABLE APPROVAL(
A_KEY NUMBER PRIMARY KEY,
C_KEY_FK NUMBER,
A_TITLE VARCHAR2(300),
A_WRITER_FK NUMBER,
A_WRITE_DATE DATE,
A_DOCUMENT_TYPE VARCHAR2(100),
A_CONDITION NUMBER CHECK (A_CONDITION BETWEEN 0 AND 2)
);

ALTER TABLE APPROVAL ADD (FOREIGN KEY (A_WRITER_FK) REFERENCES EMPLOYEE (E_KEY));
ALTER TABLE APPROVAL ADD (FOREIGN KEY (C_KEY_FK) REFERENCES COMPANY (C_KEY));


--전자결재상태테이블
CREATE TABLE APPROVAL_CONDITION(
AC_KEY NUMBER PRIMARY KEY,
A_KEY_FK NUMBER,
AC_APPROVER_FK NUMBER,
AC_CONDITION NUMBER CHECK (CONDITION BETWEEN 0 AND 2),
AC_APPROVAL_DATE DATE
);

ALTER TABLE APPROVAL_CONDITION ADD (FOREIGN KEY (A_KEY_FK) REFERENCES APPROVAL (A_KEY));
ALTER TABLE APPROVAL_CONDITION ADD (FOREIGN KEY (AC_APPROVER_FK) REFERENCES EMPLOYEE (E_KEY));






